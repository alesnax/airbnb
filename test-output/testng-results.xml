<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="5" passed="5">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="2229" started-at="2017-04-14T11:44:46Z" finished-at="2017-04-14T11:44:48Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="2229" started-at="2017-04-14T11:44:46Z" finished-at="2017-04-14T11:44:48Z">
      <class name="com.epam.apartment.dao.ApartmentDaoTest">
        <test-method status="PASS" signature="createSchema()[pri:0, instance:com.epam.apartment.dao.ApartmentDaoTest@12f41634]" name="createSchema" is-config="true" duration-ms="545" started-at="2017-04-14T14:44:46Z" finished-at="2017-04-14T14:44:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createSchema -->
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:com.epam.apartment.dao.ApartmentDaoTest@12f41634]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="1" started-at="2017-04-14T14:44:46Z" finished-at="2017-04-14T14:44:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()[pri:0, instance:com.epam.apartment.dao.ApartmentDaoTest@12f41634]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="737" started-at="2017-04-14T14:44:46Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2017-04-14T14:44:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.epam.apartment.dao.ApartmentDaoTest@12f41634]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2017-04-14T14:44:47Z" finished-at="2017-04-14T14:44:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.epam.apartment.dao.ApartmentDaoTest.findApartmentByCriteriaCityCountryTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.apartment.dao.ApartmentDaoTest@12f41634]" name="setUp" is-config="true" duration-ms="229" started-at="2017-04-14T14:44:47Z" finished-at="2017-04-14T14:44:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="findApartmentByCriteriaCityCountryTest()[pri:0, instance:com.epam.apartment.dao.ApartmentDaoTest@12f41634]" name="findApartmentByCriteriaCityCountryTest" duration-ms="52" started-at="2017-04-14T14:44:47Z" finished-at="2017-04-14T14:44:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findApartmentByCriteriaCityCountryTest -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.epam.apartment.dao.ApartmentDaoTest@12f41634]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2017-04-14T14:44:47Z" finished-at="2017-04-14T14:44:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.epam.apartment.dao.ApartmentDaoTest.findApartmentByCriteriaCityCountryTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.epam.apartment.dao.ApartmentDaoTest@12f41634]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2017-04-14T14:44:47Z" finished-at="2017-04-14T14:44:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.epam.apartment.dao.ApartmentDaoTest.findAvailableApartmentsForDatesWithBookingsTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.apartment.dao.ApartmentDaoTest@12f41634]" name="setUp" is-config="true" duration-ms="127" started-at="2017-04-14T14:44:47Z" finished-at="2017-04-14T14:44:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="findAvailableApartmentsForDatesWithBookingsTest()[pri:0, instance:com.epam.apartment.dao.ApartmentDaoTest@12f41634]" name="findAvailableApartmentsForDatesWithBookingsTest" duration-ms="26" started-at="2017-04-14T14:44:48Z" finished-at="2017-04-14T14:44:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findAvailableApartmentsForDatesWithBookingsTest -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.epam.apartment.dao.ApartmentDaoTest@12f41634]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2017-04-14T14:44:48Z" finished-at="2017-04-14T14:44:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.epam.apartment.dao.ApartmentDaoTest.findAvailableApartmentsForDatesWithBookingsTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.apartment.dao.ApartmentDaoTest@12f41634]" name="setUp" is-config="true" duration-ms="165" started-at="2017-04-14T14:44:48Z" finished-at="2017-04-14T14:44:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.epam.apartment.dao.ApartmentDaoTest@12f41634]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-04-14T14:44:48Z" finished-at="2017-04-14T14:44:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.epam.apartment.dao.ApartmentDaoTest.findAvailableApartmentsForDatesWithoutBookingsTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="findAvailableApartmentsForDatesWithoutBookingsTest()[pri:0, instance:com.epam.apartment.dao.ApartmentDaoTest@12f41634]" name="findAvailableApartmentsForDatesWithoutBookingsTest" duration-ms="19" started-at="2017-04-14T14:44:48Z" finished-at="2017-04-14T14:44:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findAvailableApartmentsForDatesWithoutBookingsTest -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.epam.apartment.dao.ApartmentDaoTest@12f41634]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2017-04-14T14:44:48Z" finished-at="2017-04-14T14:44:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.epam.apartment.dao.ApartmentDaoTest.findAvailableApartmentsForDatesWithoutBookingsTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.apartment.dao.ApartmentDaoTest@12f41634]" name="setUp" is-config="true" duration-ms="125" started-at="2017-04-14T14:44:48Z" finished-at="2017-04-14T14:44:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.epam.apartment.dao.ApartmentDaoTest@12f41634]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-04-14T14:44:48Z" finished-at="2017-04-14T14:44:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.epam.apartment.dao.ApartmentDaoTest.findConcreteApartmentByExistedNameTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="findConcreteApartmentByExistedNameTest()[pri:0, instance:com.epam.apartment.dao.ApartmentDaoTest@12f41634]" name="findConcreteApartmentByExistedNameTest" duration-ms="7" started-at="2017-04-14T14:44:48Z" finished-at="2017-04-14T14:44:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findConcreteApartmentByExistedNameTest -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.epam.apartment.dao.ApartmentDaoTest@12f41634]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-04-14T14:44:48Z" finished-at="2017-04-14T14:44:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.epam.apartment.dao.ApartmentDaoTest.findConcreteApartmentByUnexistedNameTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.epam.apartment.dao.ApartmentDaoTest@12f41634]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2017-04-14T14:44:48Z" finished-at="2017-04-14T14:44:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.epam.apartment.dao.ApartmentDaoTest.findConcreteApartmentByExistedNameTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.apartment.dao.ApartmentDaoTest@12f41634]" name="setUp" is-config="true" duration-ms="85" started-at="2017-04-14T14:44:48Z" finished-at="2017-04-14T14:44:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="findConcreteApartmentByUnexistedNameTest()[pri:0, instance:com.epam.apartment.dao.ApartmentDaoTest@12f41634]" name="findConcreteApartmentByUnexistedNameTest" duration-ms="19" started-at="2017-04-14T14:44:48Z" finished-at="2017-04-14T14:44:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findConcreteApartmentByUnexistedNameTest -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:com.epam.apartment.dao.ApartmentDaoTest@12f41634]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2017-04-14T14:44:48Z" finished-at="2017-04-14T14:44:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.epam.apartment.dao.ApartmentDaoTest@12f41634]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2017-04-14T14:44:48Z" finished-at="2017-04-14T14:44:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.epam.apartment.dao.ApartmentDaoTest.findConcreteApartmentByUnexistedNameTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="dropSchema()[pri:0, instance:com.epam.apartment.dao.ApartmentDaoTest@12f41634]" name="dropSchema" is-config="true" duration-ms="14" started-at="2017-04-14T14:44:48Z" finished-at="2017-04-14T14:44:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dropSchema -->
      </class> <!-- com.epam.apartment.dao.ApartmentDaoTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
